using System;
using System.Collections.Generic;
using System.Linq;
/*

LinqBegin2. Дана цифра D (однозначное целое число) и целочисленная последовательность A. Вывести первый положительный элемент последовательности A, оканчивающийся
цифрой D. Если требуемых элементов в последовательности
A нет, то вывести 0.
LinqBegin3. Дано целое число L (> 0) и строковая последовательность A. Вывести последнюю строку из A, начинающуюся с цифры и имеющую длину L. Если требуемых строк в последовательности A нет, то вывести строку «Not found».
Указание. Для обработки ситуации, связанной с отсутствием
требуемых строк, использовать операцию ??.
LinqBegin4. Дан символ С и строковая последовательность A.
Если A содержит единственный элемент, оканчивающийся
символом C, то вывести этот элемент; если требуемых строк
в A нет, то вывести пустую строку; если требуемых строк
больше одной, то вывести строку «Error».
Указание. Использовать try-блок для перехвата возможного
исключения.
LinqBegin5. Дан символ С и строковая последовательность A.
Найти количество элементов A, которые содержат более одного символа и при этом начинаются и оканчиваются символом C.
LinqBegin6. Дана строковая последовательность. Найти сумму
длин всех строк, входящих в данную последовательность.
LinqBegin7. Дана целочисленная последовательность. Найти
количество ее отрицательных элементов, а также их сумму.
Если отрицательные элементы отсутствуют, то дважды вывести 0.
LinqBegin8. Дана целочисленная последовательность. Найти
количество ее положительных двузначных элементов, а также их среднее арифметическое (как вещественное число).
Если требуемые элементы отсутствуют, то дважды вывести 0
(первый раз как целое, второй — как вещественное).
LinqBegin9. Дана целочисленная последовательность. Вывести
ее минимальный положительный элемент или число 0, если
последовательность не содержит положительных элементов
*/
namespace LINQ_Tasks {
    class Program {
        static void Main(string[] args) {
            Linq1();
        }

        static void Linq1() {
            /*LinqBegin1.Дана целочисленная последовательность,
             * содержащая как положительные, так и отрицательные числа.
             * Вывести ее первый положительный элемент и
             * последний отрицательный элемент.
             */

            
            List<int> sequence = new List<int>();

            sequence = AddNumToList(sequence);
            OutputList<int>(sequence);
            Console.WriteLine("first positive: {0}, last nagative: {1}", sequence.First(i => i > 0), sequence.Last(i => i < 0));

            
        }

        static List<int> AddNumToList(List<int> list) {
            Random rand = new Random();
            for (int i =0; i < 15; i++) {
                list.Add(rand.Next(-250,250));
            }
            return list;
        }
        
        static void OutputList<T>(List<T> list) {
            Console.Write("List: ");

            foreach (var v in list) {
                Console.Write(v + ", ");
            }

            Console.WriteLine("");
        }
    }
}
